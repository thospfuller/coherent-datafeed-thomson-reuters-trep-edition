<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/integration
        http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.coherentlogic.coherent.datafeed"/>

    <cache:annotation-driven cache-manager="springCacheManager"/>

    <!-- import resource="hornetq-beans.xml"/ -->
    <import resource="aop-configuration.xml"/>
    <import resource="integration-beans.xml"/>
    <!-- import resource="cache-beans.xml"/ -->
    <!-- The dictionary-beans are ONLY used when loading the dictionaries from
         the local file system.
      -->
    <!-- import resource="dictionary-beans.xml"/ -->

    <!--bean id="springCacheManager"
     class="org.springframework.cache.concurrent.ConcurrentMapCacheManager"/ -->

    <!-- bean id="userBean" class="com.coherentlogic.coherent.datafeed.beans.UserBean"/ -->

    <!-- bean id="loggingService"
     class="com.coherentlogic.coherent.datafeed.services.LoggingService"
     init-method="initialize"/ -->

    <!-- bean id="context"
     class="com.coherentlogic.coherent.datafeed.configuration.ContextInitializer"
     init-method="start" destroy-method="stop"/ -->

    <!-- bean id="poolFactory"
     class="com.coherentlogic.coherent.datafeed.factories.OMMPoolFactory"/ -->

    <!-- bean id="pool" class="com.reuters.rfa.omm.OMMPool"
     factory-bean="poolFactory" factory-method="getInstance"/ -->

    <!-- bean id="encoderFactory"
     class="com.coherentlogic.coherent.datafeed.factories.OMMEncoderFactory">
        <constructor-arg name="pool" ref="pool"/>
        <constructor-arg name="msgType">
            <util:constant static-field="com.reuters.rfa.omm.OMMTypes.MSG"/>
        </constructor-arg>
        <constructor-arg name="size" value="500"/>
    </bean -->

    <!-- bean id="encoder" class="com.reuters.rfa.omm.OMMEncoder"
     factory-bean="encoderFactory" factory-method="getInstance">
    </bean -->

    <!-- bean id="eventQueueFactory" class="com.coherentlogic.coherent.datafeed.factories.rfa.EventQueueFactory">
        <constructor-arg name="eventQueueName" value="myEventQueue"/>
    </bean>

    <bean id="eventQueue" class="com.reuters.rfa.common.EventQueue"
     factory-bean="eventQueueFactory" factory-method="getInstance"/ -->

    <!-- The context must be created before the session factory is instantiated,
         which explains why we have the depends-on attribute below.
      -->
    <bean id="defaultSessionFactory" class="com.coherentlogic.coherent.datafeed.factories.RFASessionFactory"
     depends-on="context">
        <constructor-arg name="sessionName" value="mySession"/>
    </bean>

    <bean id="defaultSession" class="com.reuters.rfa.session.Session"
     factory-bean="defaultSessionFactory" factory-method="getInstance"/>

    <!-- bean id="loginMessageBuilderFactory"
     class="com.coherentlogic.coherent.datafeed.factories.LoginMessageBuilderFactory">
        <constructor-arg name="pool" ref="pool"/>
        <constructor-arg name="encoder" ref="encoder"/>
    </bean>

    <bean id="loginMessageBuilder" class="com.coherentlogic.coherent.datafeed.builders.LoginMessageBuilder"
     factory-bean="loginMessageBuilderFactory" factory-method="getInstance"/ -->

    <!-- bean id="defaultRequestMessageBuilderFactory"
     class="com.coherentlogic.coherent.datafeed.factories.RequestMessageBuilderFactory">
        <constructor-arg name="consumer" ref="defaultOMMConsumer"/>
        <constructor-arg name="eventQueue" ref="eventQueue"/>
        <constructor-arg name="pool" ref="pool"/>
        <constructor-arg name="encoder" ref="encoder"/>
    </bean>

    <bean id="defaultRequestMessageBuilder" class="com.coherentlogic.coherent.datafeed.builders.RequestMessageBuilder"
     factory-bean="defaultRequestMessageBuilderFactory" factory-method="getInstance"/ -->

    <bean id="defaultOMMConsumerFactory"
     class="com.coherentlogic.reuters.rfa.session.omm.OMMConsumerFactory">
        <constructor-arg name="session" ref="defaultSession"/>
        <constructor-arg name="eventSourceType">
            <util:constant static-field="com.reuters.rfa.common.EventSource.OMM_CONSUMER"/>
        </constructor-arg>
        <constructor-arg name="name" value="myOMMConsumer"/>
        <constructor-arg name="wCompEvents" value="true"/>
    </bean>

    <!--
      A consumer that consumes messages from the default configuration settings.
      -->
    <bean id="defaultOMMConsumer"
     class="com.reuters.rfa.session.omm.OMMConsumer"
     factory-bean="defaultOMMConsumerFactory"
     factory-method="getInstance"/>

    <bean id="positionFactory"
     class="com.coherentlogic.coherent.datafeed.factories.PositionFactory"/>

    <bean id="dispatcher" class="com.coherentlogic.coherent.datafeed.dispatchers.DispatchableNotificationClientImpl">
        <constructor-arg name="eventQueue" ref="eventQueue"/>
        <constructor-arg name="timeout">
            <util:constant static-field="com.reuters.rfa.common .Dispatchable.INFINITE_WAIT"/>
        </constructor-arg>
    </bean>

    <bean id="eventQueueProxy" class="com.coherentlogic.coherent.datafeed.proxies.EventQueueProxy" destroy-method="stop">
        <constructor-arg name="eventQueue" ref="eventQueue"/>
        <constructor-arg name="dispatchableNotificationClient" ref="dispatcher"/>
    </bean>

    <!-- bean id="defaultGatewayDelegate" class="com.coherentlogic.coherent.datafeed.integration.endpoints.GatewayDelegate"/ -->

    <bean id="authenticationEventDrivenEndpoint"
     class="com.coherentlogic.coherent.datafeed.integration.endpoints.EventDrivenEndpoint">
        <property name="requestChannel" ref="onAuthAddSessionToHeadersChannel"/>
        <property name="errorChannel" ref="errorChannel"/>
    </bean>

    <bean id="completionEventHandler"
     class="com.coherentlogic.coherent.datafeed.integration.endpoints.CompletionEventHandler">
        <constructor-arg name="sessionCache" ref="sessionCache"/>
    </bean>

    <!--
      A service that is used to convert the value of an event type into a
      string this is useful when routing via a header since we don't want to be
      adding integer values to the Spring configuration file as it will make it
      difficult to sort out what the integer represents without adding comments.

      DEPRECATED: UNUSED, I BELIEVE
      -->
    <bean id="OMMLoginEventRouter"
     class="com.coherentlogic.coherent.datafeed.services.EventTypeConverterService"/>

    <bean id="sessionFactory" class="com.coherentlogic.coherent.datafeed.factories.SessionFactory">
        <constructor-arg name="directoryEntryCache" ref="directoryEntryCache"/>
        <constructor-arg name="dictionaryEntryCache" ref="dictionaryEntryCache"/>
        <constructor-arg name="ts1DefEntryCache" ref="ts1DefEntryCache"/>
        <constructor-arg name="timeSeriesEntriesCache" ref="timeSeriesEntriesCache"/>
    </bean>

    <bean id="authenticationService" class="com.coherentlogic.coherent.datafeed.services.AuthenticationService"
     depends-on="loggingService">
        <constructor-arg
         name="loginMessageBuilder"
         ref="loginMessageBuilder"
         type="com.coherentlogic.coherent.datafeed.builders.LoginMessageBuilder"/>
        <constructor-arg
         name="eventQueue"
         ref="eventQueue"
         type="com.reuters.rfa.common.EventQueue"/>
        <constructor-arg
         name="ommConsumer"
         ref="defaultOMMConsumer"
         type="com.reuters.rfa.session.omm.OMMConsumer"/>
        <constructor-arg name="positionFactory" ref="positionFactory"/>
        <constructor-arg name="client" ref="authenticationEventDrivenEndpoint"/>
        <constructor-arg name="sessionCache" ref="sessionCache"/>
        <constructor-arg name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="jsonAdapter" class="com.coherentlogic.coherent.datafeed.adapters.json.RFABeanToJSONAdapter">
        <constructor-arg name="targets" index="0" type="Class[]">
            <array value-type="java.lang.Class">
                <value>com.coherentlogic.coherent.datafeed.domain.AbstractCommonProperties</value>
                <value>com.coherentlogic.coherent.datafeed.domain.AbstractAdvancedCommonProperties</value>
                <!-- value>com.coherentlogic.coherent.datafeed.domain.SessionBean</value -->
                <value>com.coherentlogic.coherent.datafeed.domain.MarketPrice</value>
                <value>com.coherentlogic.coherent.datafeed.domain.TimeSeries</value>
                <value>com.coherentlogic.coherent.datafeed.domain.MarketMaker</value>
                <value>com.coherentlogic.coherent.datafeed.domain.MarketMaker.Order</value>
                <value>com.coherentlogic.coherent.datafeed.domain.MarketByOrder</value>
                <value>com.coherentlogic.coherent.datafeed.domain.MarketByOrder.Order</value>
                <value>com.coherentlogic.coherent.datafeed.domain.StatusResponse</value>
                <value>com.coherentlogic.coherent.datafeed.domain.DirectoryEntries</value>
                <value>com.coherentlogic.coherent.datafeed.domain.DictionaryEntries</value>
            </array>
        </constructor-arg>
    </bean>

    <bean id="ts1DefEventDrivenEndpoint"
     class="com.coherentlogic.coherent.datafeed.integration.endpoints.EventDrivenEndpoint">
        <property name="requestChannel" ref="onTS1DefAddSessionToHeadersChannel"/>
    </bean>

    <bean id="ts1DefRequestExecutor"
     class="com.coherentlogic.coherent.datafeed.services.CommonRequestExecutor">
        <constructor-arg name="client" ref="ts1DefEventDrivenEndpoint"/>
        <constructor-arg name="requestMessageBuilderFactory"
         ref="defaultRequestMessageBuilderFactory"/>
    </bean>

    <!-- @TODO: Upgrading this service and RFA 8 does not have the Event constant needed so this is broken. -->
    <bean id="marketPriceEventDrivenEndpoint"
     class="com.coherentlogic.coherent.datafeed.integration.endpoints.EventDrivenEndpoint">
        <property name="requestChannel" ref="onMarketPriceAddSessionToHeadersChannel"/>
        <!-- shouldTrack -->
    </bean>

    <bean id="marketMakerEventDrivenEndpoint"
     class="com.coherentlogic.coherent.datafeed.integration.endpoints.EventDrivenEndpoint">
        <property name="requestChannel" ref="onMarketMakerAddSessionToHeadersChannel"/>
    </bean>

    <bean id="marketPriceService" class="com.coherentlogic.coherent.datafeed.services.MarketPriceService"
     depends-on="loggingService">
        <constructor-arg name="factory" ref="defaultRequestMessageBuilderFactory"/>
        <constructor-arg name="client" ref="marketPriceEventDrivenEndpoint"/>
        <constructor-arg name="ricCache" ref="marketPriceRICCache"/>
        <constructor-arg name="marketPriceCache" ref="marketPriceCache"/>
    </bean>

    <bean id="marketMakerService" class="com.coherentlogic.coherent.datafeed.services.MarketMakerService"
     depends-on="loggingService">
        <constructor-arg name="factory" ref="defaultRequestMessageBuilderFactory"/>
        <constructor-arg name="client" ref="marketMakerEventDrivenEndpoint"/>
        <constructor-arg name="ricCache" ref="marketMakerRICCache"/>
        <constructor-arg name="marketMakerCache" ref="marketMakerCache"/>
    </bean>

    <bean id="marketByOrderEventDrivenEndpoint"
     class="com.coherentlogic.coherent.datafeed.integration.endpoints.EventDrivenEndpoint">
        <property name="requestChannel" ref="onMarketByOrderAddSessionToHeadersChannel"/>
    </bean>

    <bean id="marketByOrderService" class="com.coherentlogic.coherent.datafeed.services.MarketByOrderService"
     depends-on="loggingService">
        <constructor-arg name="factory" ref="defaultRequestMessageBuilderFactory"/>
        <constructor-arg name="client" ref="marketByOrderEventDrivenEndpoint"/>
        <constructor-arg name="ricCache" ref="marketByOrderRICCache"/>
        <constructor-arg name="marketByOrderCache" ref="marketByOrderCache"/>
    </bean>

    <bean id="statusResponseService" class="com.coherentlogic.coherent.datafeed.services.StatusResponseService"
     depends-on="loggingService">
    </bean>

    <bean id="ommSeriesHelper" class="com.coherentlogic.coherent.datafeed.services.OMMSeriesHelper"/>

    <bean id="directoryEventDrivenEndpoint"
     class="com.coherentlogic.coherent.datafeed.integration.endpoints.EventDrivenEndpoint">
        <property name="requestChannel" ref="onDirectoryAddSessionToHeadersChannel"/>
        <property name="errorChannel" ref="errorChannel"/>
    </bean>

    <!-- TODO: Does this service need a serviceName? We're querying directories,
               NOT a specific directory. -->
    <bean id="directoryService" class="com.coherentlogic.coherent.datafeed.services.DirectoryService">
        <constructor-arg name="serviceName" value="#{T(com.coherentlogic.coherent.datafeed.misc.Constants).dELEKTRON_DD}"/>
        <constructor-arg name="msgModelType" value="#{T(com.reuters.rfa.rdm.RDMMsgTypes).DIRECTORY}"/>
        <constructor-arg name="factory" ref="defaultRequestMessageBuilderFactory"/>
        <constructor-arg name="client" ref="directoryEventDrivenEndpoint"/>
    </bean>

    <bean id="ommItemEventTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.OMMItemEventTransformer"/>

    <bean id="ommMsgTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.OMMMsgTransformer"/>
    <bean id="ommMapTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.OMMMapTransformer"/>

    <bean id="directoryEntryFactory" class="com.coherentlogic.coherent.datafeed.factories.DirectoryEntryFactory"/>

    <bean id="directoryEntryAdapter" class="com.coherentlogic.coherent.datafeed.adapters.DirectoryEntryAdapter">
        <constructor-arg name="directoryEntryFactory" ref="directoryEntryFactory"/>
    </bean>

    <bean id="authenitcationFlowInverterService" class="com.coherentlogic.coherent.datafeed.services.FlowInverterService"/>

    <bean id="frameworkEventListenerAdapter" class="com.coherentlogic.coherent.datafeed.adapters.FrameworkEventListenerAdapter"/>

    <bean id="directoryServiceLoader" class="com.coherentlogic.coherent.datafeed.services.DirectoryServiceLoader">
        <constructor-arg name="directoryEntryCache" ref="directoryEntryCache"/>
        <constructor-arg name="directoryEntryAdapter" ref="directoryEntryAdapter"/>
    </bean>

    <bean id="authenticationHelper" class="com.coherentlogic.coherent.datafeed.misc.AuthenticationHelper">
        <!-- constructor-arg ref="mainUI"/ -->
    </bean>

    <bean id="timeSeriesLoader"
     class="com.coherentlogic.coherent.datafeed.services.TimeSeriesLoader">
        <constructor-arg name="fieldDictionary" ref="fieldDictionary"/>
        <constructor-arg name="ts1DefDb" ref="ts1DefDb"/>
    </bean>

    <bean id="sessionBeanFactory" class="com.coherentlogic.coherent.datafeed.factories.SessionBeanFactory"/>

    <bean id="sessionBeanAdapter" class="com.coherentlogic.coherent.datafeed.adapters.SessionBeanAdapter">
        <constructor-arg ref="sessionBeanFactory"/>
        <constructor-arg ref="attribInfoFactory"/>
    </bean>

    <bean id="refreshSessionBeanMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.RefreshSessionBeanMessageProcessor">
        <constructor-arg ref="sessionBeanAdapter"/>
        <constructor-arg ref="dacsIdCache"/>
        <constructor-arg ref="sessionBeanCache"/>
    </bean>

    <bean id="updateSessionBeanMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.UpdateSessionBeanMessageProcessor">
        <constructor-arg ref="sessionBeanAdapter"/>
        <constructor-arg ref="dacsIdCache"/>
        <constructor-arg ref="sessionBeanCache"/>
    </bean>

    <bean id="getDictionaryEntriesMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.GetDictionaryEntriesMessageProcessor">
        <constructor-arg name="dictionaryEntryCache" ref="dictionaryEntryCache"/>
    </bean>

    <bean id="getDirectoryEntriesMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.GetDirectoryEntriesMessageProcessor">
        <constructor-arg name="directoryEntryCache" ref="directoryEntryCache"/>
    </bean>

    <bean id="refreshMarketPriceMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.RefreshMarketPriceMessageProcessor">
        <constructor-arg ref="marketPriceAdapter"/>
        <constructor-arg ref="marketPriceRICCache"/>
        <constructor-arg ref="marketPriceCache"/>
     </bean>

    <bean id="updateMarketPriceMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.UpdateMarketPriceMessageProcessor">
        <constructor-arg ref="marketPriceAdapter"/>
        <constructor-arg ref="marketPriceRICCache"/>
        <constructor-arg ref="marketPriceCache"/>
    </bean>

    <bean id="refreshMarketMakerMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.RefreshMarketMakerMessageProcessor">
        <constructor-arg ref="marketMakerAdapter"/>
        <constructor-arg ref="marketMakerRICCache"/>
        <constructor-arg ref="marketMakerCache"/>
    </bean>

    <bean id="updateMarketMakerMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.UpdateMarketMakerMessageProcessor">
        <constructor-arg ref="marketMakerAdapter"/>
        <constructor-arg ref="marketMakerRICCache"/>
        <constructor-arg ref="marketMakerCache"/>
    </bean>

    <bean id="refreshMarketByOrderMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.RefreshMarketByOrderMessageProcessor">
        <constructor-arg ref="marketByOrderAdapter"/>
        <constructor-arg ref="marketByOrderRICCache"/>
        <constructor-arg ref="marketByOrderCache"/>
    </bean>

    <bean id="updateMarketByOrderMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.UpdateMarketByOrderMessageProcessor">
        <constructor-arg ref="marketByOrderAdapter"/>
        <constructor-arg ref="marketByOrderRICCache"/>
        <constructor-arg ref="marketByOrderCache"/>
    </bean>

    <!-- bean id="statusResponseMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.StatusResponseMessageProcessor">
        <constructor-arg ref="statusResponseAdapter"/>
    </bean -->

    <bean id="ts1DefDbLoaderMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.TS1DefDbLoaderMessageProcessor">
        <constructor-arg ref="ts1DefDbLoader"/>
        <constructor-arg ref="ts1DefEntryCache"/>
    </bean>

    <!-- bean id="transformTimeSeriesMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.TransformTimeSeriesMessageProcessor">
        <constructor-arg name="timeSeriesAdapter" ref="timeSeriesAdapter"/>
        COMMENTED: constructor-arg name="handleToCompletableFutureCache" ref="handleToCompletableFutureCache"/
     </bean -->

    <!-- bean id="statusInterpreter"
     class="com.coherentlogic.coherent.datafeed.integration.endpoints.StatusInterpreter"/ -->

    <!-- bean id="dataAdapter" class="com.coherentlogic.coherent.datafeed.adapters.omm.OMMDataAdapter">
        <constructor-arg ref="fieldDictionary"/>
    </bean -->

    <!-- bean id="ommDataBufferAdapter" class="com.coherentlogic.coherent.datafeed.adapters.omm.OMMDataBufferAdapter">
        <constructor-arg ref="fieldDictionary"/>
        <constructor-arg ref="dataAdapter"/>
    </bean>

    <bean id="ommEnumAdapter" class="com.coherentlogic.coherent.datafeed.adapters.omm.OMMEnumAdapter">
        <constructor-arg ref="fieldDictionary"/>
        <constructor-arg ref="dataAdapter"/>
    </bean>

    <bean id="ommNumericAdapter" class="com.coherentlogic.coherent.datafeed.adapters.omm.OMMNumericAdapter">
        <constructor-arg ref="fieldDictionary"/>
        <constructor-arg ref="dataAdapter"/>
    </bean>

    <bean id="ommDateTimeAdapter" class="com.coherentlogic.coherent.datafeed.adapters.omm.OMMDateTimeAdapter">
        <constructor-arg ref="fieldDictionary"/>
        <constructor-arg ref="dataAdapter"/>
    </bean -->

    <util:map id="fieldEntryAdapters" key-type="java.lang.Class">
        <entry key="com.coherentlogic.coherent.datafeed.adapters.omm.OMMDataBufferAdapter" value-ref="ommDataBufferAdapter"/>
        <entry key="com.coherentlogic.coherent.datafeed.adapters.omm.OMMEnumAdapter" value-ref="ommEnumAdapter"/>
        <entry key="com.coherentlogic.coherent.datafeed.adapters.omm.OMMNumericAdapter" value-ref="ommNumericAdapter"/>
        <entry key="com.coherentlogic.coherent.datafeed.adapters.omm.OMMDateTimeAdapter" value-ref="ommDateTimeAdapter"/>
    </util:map>

    <!--
      If the domain class utilizes the Changeable annotation then it must be declared as a prototype bean and it must be
      obtained via the Spring application context otherwise none of the fire methods will be called.
      -->
    <bean id="sessionBean" class="com.coherentlogic.coherent.datafeed.domain.SessionBean" scope="prototype"/>
    <bean id="directoryEntry" class="com.coherentlogic.coherent.datafeed.domain.DirectoryEntry" scope="prototype"/>
    <bean id="attribInfo" class="com.coherentlogic.coherent.datafeed.domain.AttribInfo" scope="prototype"/>
    <bean id="marketPrice" class="com.coherentlogic.coherent.datafeed.domain.MarketPrice" scope="prototype"/>
    <bean id="marketByOrder" class="com.coherentlogic.coherent.datafeed.domain.MarketByOrder" scope="prototype"/>
    <bean id="marketByOrderOrder" class="com.coherentlogic.coherent.datafeed.domain.MarketByOrder.Order" scope="prototype"/>
    <bean id="marketMaker" class="com.coherentlogic.coherent.datafeed.domain.MarketMaker" scope="prototype"/>
    <bean id="marketMakerOrder" class="com.coherentlogic.coherent.datafeed.domain.MarketMaker.Order" scope="prototype"/>
    <bean id="statusResponse" class="com.coherentlogic.coherent.datafeed.domain.StatusResponse" scope="prototype"/>

    <bean id="marketMakerFactory" class="com.coherentlogic.coherent.datafeed.factories.DefaultMarketMakerFactory"/>
    <bean id="marketMakerOrderFactory" class="com.coherentlogic.coherent.datafeed.factories.MarketMakerOrderFactory"/>

    <bean id="statusResponseAdapter"
     class="com.coherentlogic.coherent.datafeed.adapters.StatusResponseAdapter">
        <constructor-arg name="statusResponseFactory" ref="statusResponseFactory"/>
    </bean>

    <bean id="marketPriceAdapter" class="com.coherentlogic.coherent.datafeed.adapters.MarketPriceAdapter">
        <constructor-arg name="marketPriceFactory" ref="marketPriceFactory"/>
        <constructor-arg name="attribInfoFactory" ref="attribInfoFactory"/>
        <constructor-arg name="fieldDictionary" ref="fieldDictionary"/>
        <constructor-arg name="fieldEntryAdapters" ref="fieldEntryAdapters"/>
    </bean>

    <bean id="marketByOrderOrderAdapter" class="com.coherentlogic.coherent.datafeed.adapters.MarketByOrderAdapter.OrderAdapter">
        <constructor-arg name="orderFactory" ref="marketByOrderOrderFactory"/>
        <constructor-arg name="attribInfoFactory" ref="attribInfoFactory"/>
        <constructor-arg name="fieldDictionary" ref="fieldDictionary"/>
        <constructor-arg name="fieldEntryAdapters" ref="fieldEntryAdapters"/>
    </bean>

    <bean id="marketMakerOrderAdapter" class="com.coherentlogic.coherent.datafeed.adapters.MarketMakerAdapter.OrderAdapter">
        <constructor-arg name="orderFactory" ref="marketMakerOrderFactory"/>
        <constructor-arg name="attribInfoFactory" ref="attribInfoFactory"/>
        <constructor-arg name="fieldDictionary" ref="fieldDictionary"/>
        <constructor-arg name="fieldEntryAdapters" ref="fieldEntryAdapters"/>
    </bean>

    <bean id="marketByOrderAdapter" class="com.coherentlogic.coherent.datafeed.adapters.MarketByOrderAdapter">
        <constructor-arg index="0" name="marketByOrderFactory" ref="marketByOrderFactory"/>
        <constructor-arg index="1" name="orderFactory" ref="marketByOrderOrderFactory"/>
        <constructor-arg index="2" name="attribInfoFactory" ref="attribInfoFactory"/>
        <constructor-arg index="3" name="fieldDictionary" ref="fieldDictionary"/>
        <constructor-arg index="4" name="fieldEntryAdapters" ref="fieldEntryAdapters"/>
        <constructor-arg index="5" name="orderAdapter" ref="marketByOrderOrderAdapter"/>
    </bean>

    <bean id="marketMakerAdapter" class="com.coherentlogic.coherent.datafeed.adapters.MarketMakerAdapter">
        <constructor-arg name="marketMakerFactory" ref="marketMakerFactory"/>
        <constructor-arg name="attribInfoFactory" ref="attribInfoFactory"/>
        <constructor-arg name="fieldDictionary" ref="fieldDictionary"/>
        <constructor-arg name="fieldEntryAdapters" ref="fieldEntryAdapters"/>
        <constructor-arg name="orderAdapter" ref="marketMakerOrderAdapter"/>
        <constructor-arg name="orderFactory" ref="marketMakerOrderFactory"/>
    </bean>

    <!-- bean id="ommStateTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.OMMStateTransformer"/ -->

    <bean id="statusResponseTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.StatusResponseTransformer">
        <constructor-arg name="statusResponseAdapter" ref="statusResponseAdapter"/>
    </bean>

    <!-- bean id="ts1DefDb" class="com.reuters.ts1.TS1DefDb"/>

    <bean id="timeSeriesAdapter" class="com.coherentlogic.coherent.datafeed.adapters.TimeSeriesAdapter">
        <constructor-arg name="ts1DefDb" ref="ts1DefDb"/>
    </bean -->

    <bean id="timeSeriesTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.TimeSeriesTransformer">
        <constructor-arg name="timeSeriesAdapter" ref="timeSeriesAdapter"/>
    </bean>

    <bean id="cacheEntryRemovedEventListenerEndpoint" class="com.coherentlogic.coherent.datafeed.integration.endpoints.CacheEntryRemovedEventListenerEndpoint">
        <property name="requestChannel" ref="nullChannel"/><!-- routeByCacheEntryTypeChannel -->
    </bean>

    <!-- bean id="refreshMarketPriceTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.RefreshMarketPriceTransformer">
        <constructor-arg name="queryCache" ref="queryCache"/>
        <constructor-arg name="marketPriceAdapter" ref="marketPriceAdapter"/>
    </bean>

    <bean id="updateMarketPriceTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.UpdateMarketPriceTransformer">
        <constructor-arg name="queryCache" ref="queryCache"/>
        <constructor-arg name="marketPriceAdapter" ref="marketPriceAdapter"/>
    </bean>

    <bean id="refreshMarketMakerTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.RefreshMarketMakerTransformer">
        <constructor-arg name="queryCache" ref="queryCache"/>
        <constructor-arg name="marketMakerAdapter" ref="marketMakerAdapter"/>
    </bean>

    <bean id="updateMarketMakerTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.UpdateMarketMakerTransformer">
        <constructor-arg name="queryCache" ref="queryCache"/>
        <constructor-arg name="marketMakerAdapter" ref="marketMakerAdapter"/>
    </bean -->

    <!-- bean id="ommSeriesTransformer" class="com.coherentlogic.coherent.datafeed.integration.transformers.OMMSeriesTransformer"/ -->

    <!-- bean id="authenticationMessageEnricher" class="com.coherentlogic.coherent.datafeed.integration.enrichers.AuthenticationMessageEnricher">
        <constructor-arg name="sessionCache" ref="sessionCache"/>
    </bean -->

    <bean id="loginMessageProcessor" class="com.coherentlogic.coherent.datafeed.services.message.processors.LoginMessageProcessor">
        <constructor-arg name="authenticationService" ref="authenticationService"/>
        <constructor-arg name="dacsIdCache" ref="dacsIdCache"/>
        <constructor-arg name="sessionBeanCache" ref="sessionBeanCache"/>
    </bean>

    <bean id="logoutMessageProcessor" class="com.coherentlogic.coherent.datafeed.services.message.processors.LogoutMessageProcessor">
        <constructor-arg name="authenticationService" ref="authenticationService"/>
        <constructor-arg name="sessionCache" ref="sessionCache"/>
    </bean>

    <bean id="sessionEnricher" class="com.coherentlogic.coherent.datafeed.integration.enrichers.SessionEnricher"/>

    <bean id="directoryMessageProcessor" class="com.coherentlogic.coherent.datafeed.services.message.processors.DirectoryMessageProcessor">
        <constructor-arg name="directoryService" ref="directoryService"/>
        <constructor-arg name="directoryCache" ref="directoryCache"/>
    </bean>

    <bean id="dictionaryMessageProcessor" class="com.coherentlogic.coherent.datafeed.services.message.processors.DictionaryMessageProcessor">
        <constructor-arg name="dictionaryService" ref="dictionaryService"/>
        <constructor-arg name="directoryEntryCache" ref="directoryEntryCache"/>
        <constructor-arg name="dictionaryEntryCache" ref="dictionaryEntryCache"/>
    </bean>

    <bean id="directoryMessageEnricher" class="com.coherentlogic.coherent.datafeed.integration.enrichers.DirectoryMessageEnricher"/>

    <bean id="dictionaryMessageEnricher" class="com.coherentlogic.coherent.datafeed.integration.enrichers.DictionaryMessageEnricher"/>

    <bean id="marketPriceMessageEnricher" class="com.coherentlogic.coherent.datafeed.integration.enrichers.MarketPriceMessageEnricher">
        <constructor-arg name="marketPriceCache" ref="marketPriceCache"/>
    </bean>

    <bean id="marketMakerMessageEnricher" class="com.coherentlogic.coherent.datafeed.integration.enrichers.MarketMakerMessageEnricher">
        <constructor-arg name="marketMakerCache" ref="marketMakerCache"/>
    </bean>

    <bean id="marketByOrderMessageEnricher" class="com.coherentlogic.coherent.datafeed.integration.enrichers.MarketByOrderMessageEnricher">
        <constructor-arg name="marketByOrderCache" ref="marketByOrderCache"/>
    </bean>

    <bean id="ts1DefMessageEnricher" class="com.coherentlogic.coherent.datafeed.integration.enrichers.TS1DefMessageEnricher"/>
        <!-- constructor-arg name="ts1DefCache" ref="ts1DefCache"/>
    </bean -->

    <bean id="timeSeriesMessageEnricher" class="com.coherentlogic.coherent.datafeed.integration.enrichers.TimeSeriesMessageEnricher">
        <constructor-arg name="sessionCache" ref="sessionCache"/>
    </bean>

    <!-- bean id="dictionaryLoadCompleteService"
     class="com.coherentlogic.coherent.datafeed.services.DictionaryLoadCompleteService"/>

    <bean id="workflowEndsService" class="com.coherentlogic.coherent.datafeed.services.WorkflowEndsService"/ -->

    <bean id="workflowEndsDueToFinalMsgService" class="com.coherentlogic.coherent.datafeed.services.WorkflowEndsService">
        <constructor-arg name="note" value="The payload.isFinal method returned true."/>
    </bean>

    <!-- TS1-related beans -->

    <bean id="ts1DefService" class="com.coherentlogic.coherent.datafeed.services.TS1DefService">
        <constructor-arg name="serviceName" value="#{T(com.coherentlogic.coherent.datafeed.misc.Constants).dELEKTRON_DD}"/>
        <constructor-arg name="msgModelType" value="#{T(com.reuters.rfa.rdm.RDMMsgTypes).MARKET_PRICE}"/>
        <constructor-arg name="factory" ref="defaultRequestMessageBuilderFactory"/>
        <constructor-arg name="client" ref="ts1DefEventDrivenEndpoint"/>
        <constructor-arg name="commonRequestExecutor" ref="ts1DefRequestExecutor"/>
    </bean>

    <bean id="ts1DefDbLoader"
     class="com.coherentlogic.coherent.datafeed.services.TS1DefDbLoader">
        <constructor-arg name="fieldDictionary" ref="fieldDictionary"/>
        <constructor-arg name="ts1DefDb" ref="ts1DefDb"/>
    </bean>

    <bean id="ts1DefDbLoadCompleteServiceFactory"
     class="com.coherentlogic.coherent.datafeed.factories.TS1DefDbLoadCompleteServiceFactory">
        <constructor-arg name="ts1DefService" ref="ts1DefService"/>
    </bean>

    <bean id="ts1DefDbLoadCompleteService"
     class="com.coherentlogic.coherent.datafeed.services.TS1DefDbLoadCompleteService"
     factory-bean="ts1DefDbLoadCompleteServiceFactory"
     factory-method="getInstance"/>

    <bean id="ts1DefMessageProcessor"
     class="com.coherentlogic.coherent.datafeed.services.message.processors.TS1DefMessageProcessor">
        <!-- constructor-arg name="ts1DefCache" ref="ts1DefCache"/ -->
        <constructor-arg name="ts1DefEntryCache" ref="ts1DefEntryCache"/>
        <constructor-arg name="ts1DefService" ref="ts1DefService"/>
    </bean>

    <!-- bean id="ts1DefDbHelper"
     class="com.coherentlogic.coherent.datafeed.misc.TS1DefDbHelper"/>

    <bean id="timeSeriesHelper"
     class="com.coherentlogic.coherent.datafeed.services.TimeSeriesHelper"/ -->

    <!-- bean id="mainUI" class="com.coherentlogic.coherent.datafeed.client.ui.MainUI" init-method="initialize">
        <constructor-arg ref="timeSeriesServiceGateway"/>
        <constructor-arg ref="queryMarketPriceUpdates"/>
    </bean -->
</beans>