<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/integration
        http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/jms
        http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd">

    <bean id="hornetQConfig" class="org.hornetq.core.config.impl.FileConfiguration"
     init-method="start" destroy-method="stop">
        <property name="configurationUrl" value="spring/hornetq-configuration.xml"/>
    </bean>

    <!--
      The start method is not called here because if we invoke it, an exception
      will be thrown. We should see if this can be fixed, however, as it would
      probably be a good idea to have this started via Spring.
      -->
    <bean id="hornetQServer" class="org.hornetq.core.server.impl.HornetQServerImpl"
     destroy-method="stop">
        <constructor-arg name="configuration" ref="hornetQConfig"/>
    </bean>

    <bean id="statusResponseTopicConfig" class="org.hornetq.jms.server.config.impl.TopicConfigurationImpl">
        <constructor-arg name="name" value="statusResponseUpdates" type="String"/>
        <constructor-arg name="bindings" value="/tr/statusResponseUpdates" type="String[]"/> 
    </bean>
    <bean id="marketPriceTopicConfig" class="org.hornetq.jms.server.config.impl.TopicConfigurationImpl">
        <constructor-arg name="name" value="marketPriceUpdates" type="String"/>
        <constructor-arg name="bindings" value="/tr/marketPriceUpdates" type="String[]"/> 
    </bean>
    <bean id="marketByOrderTopicConfig" class="org.hornetq.jms.server.config.impl.TopicConfigurationImpl">
        <constructor-arg name="name" value="marketByOrderUpdates" type="String"/>
        <constructor-arg name="bindings" value="/tr/marketByOrderUpdates" type="String[]"/> 
    </bean>
    <bean id="timeSeriesTopicConfig" class="org.hornetq.jms.server.config.impl.TopicConfigurationImpl">
        <constructor-arg name="name" value="timeSeriesUpdates" type="String"/>
        <constructor-arg name="bindings" value="/tr/timeSeriesUpdates" type="String[]"/> 
    </bean>

    <bean id="comprehensiveJMSConfigurationFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.JMSTopicConfigurationFactory">
        <constructor-arg name="topicConfigurations">
            <util:list>
                <ref bean="statusResponseTopicConfig"/>
                <ref bean="marketPriceTopicConfig"/>
                <ref bean="marketByOrderTopicConfig"/>
                <ref bean="timeSeriesTopicConfig"/>
            </util:list>
        </constructor-arg>
    </bean>

    <bean id="comprehensiveJMSConfiguration" class="org.hornetq.jms.server.config.JMSConfiguration"
        factory-bean="comprehensiveJMSConfigurationFactory" factory-method="getInstance"/>

    <bean id="comprehensiveJMSServerManager" class="org.hornetq.jms.server.impl.JMSServerManagerImpl" init-method="start">
        <constructor-arg ref="hornetQServer"/>
        <constructor-arg ref="comprehensiveJMSConfiguration"/>
        <property name="context" value="#{ null }"/>
    </bean>
<!-- SHOULD BE GOOD BELOW HERE, PROB SHOULD BE ABOVE -->
    <bean id="statusResponseTopicFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.JMSTopicFactory">
        <constructor-arg name="topicName" value="statusResponseUpdates"/>
    </bean>
    <bean id="marketPriceTopicFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.JMSTopicFactory">
        <constructor-arg name="topicName" value="marketPriceUpdates"/>
    </bean>
    <bean id="marketByOrderTopicFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.JMSTopicFactory">
        <constructor-arg name="topicName" value="marketByOrderUpdates"/>
    </bean>
    <bean id="timeSeriesTopicFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.JMSTopicFactory">
        <constructor-arg name="topicName" value="timeSeriesUpdates"/>
    </bean>

    <bean id="statusResponseUpdatesTopic" class="javax.jms.Topic" factory-bean="statusResponseTopicFactory" factory-method="getInstance"/>
    <bean id="marketPriceUpdatesTopic" class="javax.jms.Topic" factory-bean="marketPriceTopicFactory" factory-method="getInstance"/>
    <bean id="marketByOrderUpdatesTopic" class="javax.jms.Topic" factory-bean="marketByOrderTopicFactory" factory-method="getInstance"/>
    <bean id="timeSeriesUpdatesTopic" class="javax.jms.Topic" factory-bean="timeSeriesTopicFactory" factory-method="getInstance"/>

    <bean id="transportConfiguration" class="org.hornetq.api.core.TransportConfiguration">
        <constructor-arg name="className" value="org.hornetq.core.remoting.impl.invm.InVMConnectorFactory"/>
    </bean>

    <bean id="connectionFactoryFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.ConnectionFactoryFactory">
        <constructor-arg name="factoryType" value="#{T(org.hornetq.api.jms.JMSFactoryType).TOPIC_CF}"/>
        <constructor-arg name="transportConfiguration" ref="transportConfiguration"/>
    </bean>

    <bean id="jmsConnectionFactory" class="javax.jms.ConnectionFactory"
     factory-bean="connectionFactoryFactory" factory-method="getInstance"/>

    <bean id="connection" class="javax.jms.Connection"
     factory-bean="jmsConnectionFactory" factory-method="createConnection"
     init-method="start" destroy-method="stop"/>

    <bean id="jmsSessionFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.SessionFactory"
     destroy-method="stop">
        <constructor-arg ref="connection"/>
        <constructor-arg value="false"/>
        <constructor-arg>
            <util:constant static-field="javax.jms.Session.AUTO_ACKNOWLEDGE"/>
        </constructor-arg>
    </bean>

    <bean id="jmsSession" class="javax.jms.Session"
     factory-bean="jmsSessionFactory" factory-method="getInstance"/>

    <bean id="statusResponseConsumerFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.ConsumerFactory">
        <constructor-arg name="session" ref="jmsSession"/>
        <constructor-arg name="destination" ref="statusResponseUpdatesTopic"/>
    </bean>
    <bean id="marketPriceConsumerFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.ConsumerFactory">
        <constructor-arg name="session" ref="jmsSession"/>
        <constructor-arg name="destination" ref="marketPriceUpdatesTopic"/>
    </bean>
    <!-- @TODO: Deprecated, no longer being used. -->
    <bean id="timeSeriesConsumerFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.ConsumerFactory">
        <constructor-arg name="session" ref="jmsSession"/>
        <constructor-arg name="destination" ref="timeSeriesUpdatesTopic"/>
    </bean>
    <bean id="marketByOrderConsumerFactory" class="com.coherentlogic.coherent.datafeed.factories.hornetq.ConsumerFactory">
        <constructor-arg name="session" ref="jmsSession"/>
        <constructor-arg name="destination" ref="marketByOrderUpdatesTopic"/>
    </bean>

    <bean id="statusResponseConsumer" class="javax.jms.MessageConsumer" factory-bean="statusResponseConsumerFactory" factory-method="getInstance"/>
    <bean id="marketPriceConsumer" class="javax.jms.MessageConsumer" factory-bean="marketPriceConsumerFactory" factory-method="getInstance"/>
    <bean id="timeSeriesConsumer" class="javax.jms.MessageConsumer" factory-bean="timeSeriesConsumerFactory" factory-method="getInstance"/>
    <bean id="marketByOrderConsumer" class="javax.jms.MessageConsumer" factory-bean="marketByOrderConsumerFactory" factory-method="getInstance"/>
</beans>